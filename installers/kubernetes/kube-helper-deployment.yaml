#ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubehelper-sa
  labels:
    app: kubehelper
    app.kubernetes.io/name: kubehelper
---

#Service
apiVersion: v1
kind: Service
metadata:
  name: kubehelper-svc
  labels:
    app: kubehelper
    app.kubernetes.io/name: kubehelper
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: kubehelper
    app.kubernetes.io/name: kubehelper
---

#ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubehelper-cr
  labels:
    app: kubehelper
    app.kubernetes.io/name: kubehelper
rules:
  - apiGroups: [ "*" ]
    resources: [ "*" ]
    verbs: [ "get","list" ]
  - nonResourceURLs: [ "*" ]
    verbs: [ "get","list" ]
---

#ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubehelper-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubehelper-cr
subjects:
  - kind: ServiceAccount
    name: kubehelper-sa
    namespace: default
---

#Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubehelper-deployment
  labels:
    app: kubehelper
    app.kubernetes.io/name: kubehelper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubehelper
      app.kubernetes.io/name: kubehelper
  template:
    metadata:
      labels:
        app: kubehelper
        app.kubernetes.io/name: kubehelper
    spec:
      serviceAccountName: kubehelper-sa
      automountServiceAccountToken: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: kubehelper
          image: kubehelper/kubehelper:1.0.0
          imagePullPolicy: Always
          env:
            - name: KUBE_HELPER_UI_USERNAME
              value: kube
            - name: KUBE_HELPER_UI_PASSWORD
              value: helper
          ports:
            - containerPort: 8080
              name: ui
              protocol: TCP
